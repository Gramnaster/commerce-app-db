json.id @receipt.id
json.transaction_type @receipt.transaction_type
json.amount @receipt.amount.to_f
json.balance_before @receipt.balance_before.to_f
json.balance_after @receipt.balance_after.to_f
json.description @receipt.description
json.created_at @receipt.created_at
json.updated_at @receipt.updated_at

# User information
json.user do
  json.id @receipt.user.id
  json.email @receipt.user.email

  if @receipt.user.user_detail.present?
    json.first_name @receipt.user.user_detail.first_name
    json.last_name @receipt.user.user_detail.last_name
    json.full_name "#{@receipt.user.user_detail.first_name} #{@receipt.user.user_detail.last_name}"
  end
end

# Order information (if purchase)
if @receipt.user_cart_order.present?
  json.order do
    json.id @receipt.user_cart_order.id
    json.cart_status @receipt.user_cart_order.cart_status
    json.is_paid @receipt.user_cart_order.is_paid
    json.total_cost @receipt.user_cart_order.total_cost.to_f
    json.created_at @receipt.user_cart_order.created_at

    # Delivery address
    if @receipt.user_cart_order.address.present?
      json.delivery_address do
        json.id @receipt.user_cart_order.address.id

        address = @receipt.user_cart_order.address
        json.unit_no address.unit_no
        json.street_no address.street_no
        json.address_line1 address.address_line1
        json.address_line2 address.address_line2
        json.city address.city
        json.region address.region
        json.zipcode address.zipcode

        if address.country.present?
          json.country do
            json.id address.country.id
            json.name address.country.name
            json.code address.country.code
          end
        end
      end
    end

    # Order items
    json.items do
      json.array! @receipt.user_cart_order.shopping_cart.shopping_cart_items do |item|
        json.id item.id
        json.qty item.qty
        json.subtotal (item.product.price.to_f * item.qty).round(2)

        json.product do
          json.id item.product.id
          json.title item.product.title
          json.description item.product.description
          json.price item.product.price.to_f
        end
      end
    end

    json.items_count @receipt.user_cart_order.shopping_cart.shopping_cart_items_count
    json.total_quantity @receipt.user_cart_order.shopping_cart.shopping_cart_items.sum(:qty)

    # Delivery orders - warehouse orders grouped by company site
    if @receipt.user_cart_order.warehouse_orders.any?
      json.delivery_orders do
        # Group warehouse orders by company_site
        grouped_orders = @receipt.user_cart_order.warehouse_orders.group_by(&:company_site)

        json.array! grouped_orders.to_a do |(company_site, orders)|
          json.company_site do
            json.id company_site.id
            json.title company_site.title
          end

          # Overall delivery status - only changes when ALL orders reach the same status
          statuses = orders.map(&:product_status).uniq
          overall_status = if statuses.length == 1
            # All orders have the same status
            statuses.first
          elsif statuses.include?("storage")
            # Mixed statuses, still in storage phase
            "storage"
          elsif statuses.include?("progress")
            # Mixed statuses, in progress phase
            "progress"
          else
            # All delivered
            "delivered"
          end
          json.status overall_status

          # Last status update timestamp (uses updated_at from most recent warehouse order update)
          json.delivered_at orders.map(&:updated_at).max
        end
      end
    end
  end
else
  json.order nil
end
